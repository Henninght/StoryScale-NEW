name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        browser: [chromium, firefox, webkit]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Build application
      run: npm run build
      
    - name: Run E2E tests - ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}-${{ matrix.browser }}
        path: test-results/
        retention-days: 30

  mobile-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Build application
      run: npm run build
      
    - name: Run Mobile E2E tests
      run: npm run test:e2e:mobile
      env:
        CI: true
        
    - name: Upload Mobile Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-mobile-report
        path: playwright-report/
        retention-days: 30

  smoke-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Build application
      run: npm run build
      
    - name: Run Smoke Tests
      run: npx playwright test tests/e2e/homepage.spec.ts
      env:
        CI: true
        
    - name: Upload Smoke Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-report
        path: playwright-report/
        retention-days: 7

  full-test-suite:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    needs: [smoke-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build application
      run: npm run build
      
    - name: Run All Tests
      run: npm run test:all
      env:
        CI: true
        
    - name: Upload Full Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: full-test-report
        path: |
          playwright-report/
          coverage/
          test-results/
        retention-days: 30

  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [smoke-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Comment PR with Test Status
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ§ª E2E tests are running for this PR. Check the Actions tab for detailed results.'
          });